<?xml version="1.0" encoding="UTF-8"?>
<ContentPage
    xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:dxschi="clr-namespace:DevExpress.XamarinForms.Scheduler.Internal;assembly=DevExpress.XamarinForms.Scheduler"
    xmlns:dxscht="clr-namespace:DevExpress.XamarinForms.Scheduler.Themes;assembly=DevExpress.XamarinForms.Scheduler"
    xmlns:dxe="clr-namespace:DevExpress.XamarinForms.Editors;assembly=DevExpress.XamarinForms.Editors"
    xmlns:dxcv="clr-namespace:DevExpress.XamarinForms.CollectionView;assembly=DevExpress.XamarinForms.CollectionView"
    x:Class="SchedulerExample.AppointmentPages.CustomAppointmentEditPage"
    Title="{Binding Title}"
    BackgroundColor="{DynamicResource SchedulerBackgroundColor}">
    
    <ContentPage.ToolbarItems>
         <ToolbarItem
             x:Name="saveToolbarItem"
             Clicked="OnSaveTapped">
        </ToolbarItem>
    </ContentPage.ToolbarItems>
    <ContentPage.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <dxscht:CommonEditorStyles />
            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="FormItemStyle" TargetType="Grid" BasedOn="{StaticResource FormItemStyleBase}"/>
            <Style x:Key="FormDateTimeItemStyle" TargetType="Grid" BasedOn="{StaticResource FormDateTimeItemStyleBase}"/>
            <Style x:Key="Wrapper" TargetType="Frame" BasedOn="{StaticResource WrapperBase}"/>
            
            <dxschi:BoolToThicknessConverter x:Key="AddReminderButtonTextMarginSelector" 
                                            TrueThickness="60,0,0,0"
                                            FalseThickness="12,0,0,0"/>
            <dxschi:BoolToStringConverter x:Key="AddReminderButtonTextSelector"
                                         TrueString="Add another reminder"
                                         FalseString="Add a reminder"/>
            <dxschi:BoolToThicknessConverter x:Key="ReminderLabelMarginSelector" 
                                            TrueThickness="12,0,0,0"
                                            FalseThickness="60,0,0,0"/>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <ScrollView>
            <StackLayout x:Name="root" Style="{StaticResource RootContainerStyle}">
                <!-- MARK: Name -->
                <Grid Style="{DynamicResource FormItemStyle}"
                      ColumnDefinitions="Auto,*">
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnCaptionTapped"/>
                    </Grid.GestureRecognizers>
                    <dxschi:IconImage Source="event_name.png"
                           Style="{StaticResource FormItemIcon}"
                           Grid.Column="0"/>
                    <dxe:TextEdit 
                        x:Name="eventNameEntry"
                        Text="{Binding Subject}"
                        PlaceholderText="Event name"
                        Style="{StaticResource FormItemPrimaryContent-Entry}"
                        Grid.Column="1"/>
                </Grid>
                <Frame Style="{DynamicResource Wrapper}">
                    <BoxView Style="{StaticResource FormSeparator}"/>
                </Frame>
                
                <!-- MARK: Label -->
                <Grid Style="{DynamicResource FormItemStyle}" 
                      ColumnDefinitions="Auto,Auto,*,Auto">
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnLabelTapped"/>
                    </Grid.GestureRecognizers>
                    <dxschi:IconImage Source="palette.png"
                           Grid.Column="0"
                           Style="{StaticResource FormItemIcon}"/>
                    <Label Text="Label"
                           Grid.Column="1"
                           Style="{StaticResource FormItemPrimaryContent-Label}"/>
                    <Label Text="{Binding Label.Caption}"
                           Grid.Column="2"
                           Style="{StaticResource FormItemColorLabel}"/>
                    <BoxView Color="{Binding Label.Color}"
                             Grid.Column="3"
                             Style="{StaticResource FormItemColorIndicator}"/>
                </Grid>
                <!-- MARK: Status -->
                <Grid Style="{DynamicResource FormItemStyle}"
                      ColumnDefinitions="Auto,*,Auto">
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnStatusTapped"/>
                    </Grid.GestureRecognizers>
                    <Label Text="Status"
                           Grid.Column="0"
                           Style="{StaticResource FormItemPrimaryContent-Label_NoIcon}"/>
                    <Label Text="{Binding Status.Caption}"
                           Grid.Column="1"
                           Style="{StaticResource FormItemColorLabel}"/>
                    <BoxView Color="{Binding Status.Color}"
                             Grid.Column="2"
                             Style="{StaticResource FormItemColorIndicator}"/>
                </Grid>
                <Frame Style="{DynamicResource Wrapper}">
                    <BoxView  Style="{StaticResource FormSeparator}"/>
                </Frame>
                
                <!-- MARK: AllDay -->
                <Grid 
                    Style="{DynamicResource FormItemStyle}"
                    ColumnDefinitions="Auto,*,Auto">
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnAllDayTapped"/>
                    </Grid.GestureRecognizers>
                    <dxschi:IconImage Source="time.png"
                           Grid.Column="0"
                           Style="{StaticResource FormItemIcon}"/>
                    <Label Text="All day"
                           Grid.Column="1"
                           Style="{StaticResource FormItemPrimaryContent-Label}"/>
                    <Switch x:Name="allDaySwitch"
                            Grid.Column="2"
                            OnColor="{DynamicResource SchedulerEditPageAccentColor}"
                            IsToggled="{Binding AllDay, Mode=TwoWay}"
                            BackgroundColor="Transparent"
                            Margin="0,0,24,0">
                        <Switch.VerticalOptions>
                            <OnPlatform Android="FillAndExpand" iOS="Center" x:TypeArguments="LayoutOptions"/>
                        </Switch.VerticalOptions>
                    </Switch>
                </Grid>
                <!-- MARK: Start -->
                <Grid Style="{DynamicResource FormDateTimeItemStyle}"
                      ColumnDefinitions="*,Auto">
                    <dxe:DateEdit Date="{Binding StartDate}"
                                  Grid.Column="0"
                                  Style="{StaticResource FormItemDatePicker}"/>
                    <dxe:TimeEdit TimeSpan="{Binding StartTime}"
                                  Grid.Column="1"
                                  IsVisible="{Binding AllDay, Converter={dxschi:InverseBoolConverter}}"
                                  Style="{StaticResource FormItemTimePicker}"/>
                </Grid>
                <!-- MARK: End -->
                <Grid Style="{DynamicResource FormDateTimeItemStyle}"
                      ColumnDefinitions="*,Auto">
                    <dxe:DateEdit Date="{Binding EndDate}"
                                  Grid.Column="0"
                                  Style="{StaticResource FormItemDatePicker}"/>
                    <dxe:TimeEdit TimeSpan="{Binding EndTime}"
                                  Grid.Column="1"
                                  IsVisible="{Binding AllDay, Converter={dxschi:InverseBoolConverter}}"
                                  Style="{StaticResource FormItemTimePicker}"/>
                </Grid>
                <!-- MARK: TimeZone -->
                <Grid 
                    Style="{DynamicResource FormItemStyle}"
                    IsVisible="{Binding ActualAllowTimeZone}"
                    ColumnDefinitions="Auto,*">
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnTimeZoneTapped"/>
                    </Grid.GestureRecognizers>
                    <dxschi:IconImage Source="timezone.png"
                           Grid.Column="0"
                           Style="{StaticResource FormItemIcon}"/>
                    <Label Text="{Binding TimeZone.DisplayName}"
                           Grid.Column="1"
                           Style="{StaticResource FormItemPrimaryContent-Label}"/>
                </Grid>
                <Frame Style="{DynamicResource Wrapper}">
                    <BoxView  Style="{StaticResource FormSeparator}"/>
                </Frame>
                
                <!-- MARK: Reminders -->
                <dxcv:DXCollectionView x:Name="reminderContainer"
                                       Margin="0"
                                       ReduceSizeToContent="True"
                                       Orientation="Vertical"
                                       ItemsSource="{Binding Reminders}"
                                       IsVisible="{Binding AllowReminders}">
                    <dxcv:DXCollectionView.ItemTemplate>
                        <DataTemplate>
                            <Grid Style="{DynamicResource FormItemStyle}"
                                  ColumnDefinitions="Auto,*,Auto">
                                <dxschi:IconImage Source="notification.png"
                                       Style="{StaticResource FormItemIcon}"
                                       Grid.Column="0"
                                       IsVisible="{Binding IsFirst}"/>
                                <Label Text="{Binding TimeBeforeStartText}"
                                       Grid.Column="1"
                                       Style="{StaticResource FormItemPrimaryContent-Label}"
                                       Margin="{Binding IsFirst, Converter={StaticResource ReminderLabelMarginSelector}}"/>
                                <StackLayout Grid.Column="2"
                                             Margin="0">
                                    <StackLayout.GestureRecognizers>
                                        <TapGestureRecognizer Tapped="OnRemoveReminderTapped" />
                                    </StackLayout.GestureRecognizers>
                                    <dxschi:IconImage Source="close.png"
                                                     Margin="24,12"
                                                     VerticalOptions="Center"
                                                     HorizontalOptions="Center"
                                                     TintColor="{DynamicResource SchedulerEditPageSecondaryIconColor}"/>
                                </StackLayout>
                            </Grid>
                        </DataTemplate>
                    </dxcv:DXCollectionView.ItemTemplate>
                </dxcv:DXCollectionView>
                <Grid Style="{DynamicResource FormItemStyle}"
                      ColumnDefinitions="Auto,*"
                      IsVisible="{Binding AllowReminders}">
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnAddReminderTapped"/>
                    </Grid.GestureRecognizers>
                    <dxschi:IconImage Source="notification.png"
                           Style="{StaticResource FormItemIcon}"
                           Grid.Column="0"
                           IsVisible="{Binding HasReminders, Converter={dxschi:InverseBoolConverter}}"/>
                    <Label Text="{Binding HasReminders, Converter={StaticResource AddReminderButtonTextSelector}}"
                           Style="{StaticResource FormItemPrimaryContent-Label}"
                           Grid.Column="1"
                           Margin="{Binding HasReminders, Converter={StaticResource AddReminderButtonTextMarginSelector}}"/>
                </Grid>
                <Frame 
                    Style="{DynamicResource Wrapper}" 
                    IsVisible="{Binding AllowReminders}">
                    <BoxView Style="{StaticResource FormSeparator}"/>
                 </Frame>
                
                <!-- MARK: Recurrence -->
                <Grid 
                    Style="{DynamicResource FormItemStyle}"
                    IsVisible="{Binding AllowRecurrence}"
                    ColumnDefinitions="Auto,Auto,*">
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnRepeatTapped"/>
                    </Grid.GestureRecognizers>
                    <dxschi:IconImage Source="repeat.png"
                           Grid.Column="0"
                           Style="{StaticResource FormItemIcon}"/>
                    <Label Text="Repeat"
                           Grid.Column="1"
                           Style="{StaticResource FormItemPrimaryContent-Label}"/>
                    <Label Text="{Binding Recurrence.Name}"
                           Grid.Column="2"
                           TextColor="{DynamicResource SchedulerEditPagePrimaryTextColor}"
                           HorizontalOptions="End" 
                           VerticalOptions="Center"
                           BackgroundColor="Transparent"
                           Margin="0,0,24,0"/>
                </Grid>
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>
